CDD_UserRxIndication_Can_2 (PduIdType RxPduId, const struct PduInfoType * PduInfoPtr)
{
  uint8 i;
  uint8 Data[8];
  static uint8 counter_RXPDU1 = 0;

  <bb 2> :
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = PduInfoPtr->SduDataPtr;
  _2 = (sizetype) i;
  _3 = _1 + _2;
  _4 = (int) i;
  _5 = *_3;
  Data[_4] = _5;
  i.4_6 = i;
  i = i.4_6 + 1;

  <bb 4> :
  _7 = (long unsigned int) i;
  _8 = PduInfoPtr->SduLength;
  if (_7 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _9 = (int) RxPduId;
  if (_9 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  counter_RXPDU1.5_10 = counter_RXPDU1;
  counter_RXPDU1.6_11 = counter_RXPDU1.5_10;
  _12 = counter_RXPDU1.6_11 + 1;
  counter_RXPDU1 = _12;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  CanIf_Can2_bRxFlag = 1;
  Data = {CLOBBER};
  return;

}


CDD_UserTxConfirmation_Can_2 (PduIdType TxPduId, Std_ReturnType result)
{
  static uint8 Transmit_count = 0;

  <bb 2> :
  if (result == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Transmit_count.2_1 = Transmit_count;
  Transmit_count.3_2 = Transmit_count.2_1;
  _3 = Transmit_count.3_2 + 1;
  Transmit_count = _3;
  CanIf_Can2_bTxFlag = 1;

  <bb 4> :
  return;

}


CDD_UserRxIndication_Can_0 (PduIdType RxPduId, const struct PduInfoType * PduInfoPtr)
{
  <bb 2> :
  CanIf_Can0_bRxFlag = 1;
  return;

}


CDD_UserTxConfirmation_Can_0 (PduIdType TxPduId, Std_ReturnType result)
{
  static uint8 Transmit_count = 0;

  <bb 2> :
  if (result == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Transmit_count.0_1 = Transmit_count;
  Transmit_count.1_2 = Transmit_count.0_1;
  _3 = Transmit_count.1_2 + 1;
  Transmit_count = _3;
  CanIf_Can0_bTxFlag = 1;

  <bb 4> :
  return;

}


