CDD_UserRxIndication_Can_2 (PduIdType RxPduId, const struct PduInfoType * PduInfoPtr)
{
  uint8 i;
  uint8 Data[8];
  static uint8 counter_RXPDU4 = 0;

  <bb 2> :
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = PduInfoPtr->SduDataPtr;
  _2 = (sizetype) i;
  _3 = _1 + _2;
  _4 = (int) i;
  _5 = *_3;
  Data[_4] = _5;
  i.6_6 = i;
  i = i.6_6 + 1;

  <bb 4> :
  _7 = (long unsigned int) i;
  _8 = PduInfoPtr->SduLength;
  if (_7 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _9 = (int) RxPduId;
  if (_9 == 4)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
<L3>:
  counter_RXPDU4.7_10 = counter_RXPDU4;
  counter_RXPDU4.8_11 = counter_RXPDU4.7_10;
  _12 = counter_RXPDU4.8_11 + 1;
  counter_RXPDU4 = _12;
  goto <bb 8>; [INV]

  <bb 7> :
<L4>:

  <bb 8> :
  CanIf_Can2_bRxFlag = 1;
  Data = {CLOBBER};
  return;

}


CDD_UserTxConfirmation_Can_2 (PduIdType TxPduId, Std_ReturnType result)
{
  static uint8 Transmit_count = 0;

  <bb 2> :
  if (result == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Transmit_count.4_1 = Transmit_count;
  Transmit_count.5_2 = Transmit_count.4_1;
  _3 = Transmit_count.5_2 + 1;
  Transmit_count = _3;
  CanIf_Can2_bTxFlag = 1;

  <bb 4> :
  return;

}


CDD_UserRxIndication_Can_0 (PduIdType RxPduId, const struct PduInfoType * PduInfoPtr)
{
  uint8 i;
  uint8 Data[12];
  static uint8 counters_RXPDU[4];

  <bb 2> :
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = PduInfoPtr->SduDataPtr;
  _2 = (sizetype) i;
  _3 = _1 + _2;
  _4 = (int) i;
  _5 = *_3;
  Data[_4] = _5;
  i.3_6 = i;
  i = i.3_6 + 1;

  <bb 4> :
  _7 = (long unsigned int) i;
  _8 = PduInfoPtr->SduLength;
  if (_7 < _8)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _9 = (int) RxPduId;
  switch (_9) <default: <L7> [INV], case 0: <L3> [INV], case 1: <L4> [INV], case 2: <L5> [INV], case 3: <L6> [INV]>

  <bb 6> :
<L3>:
  _10 = counters_RXPDU[0];
  _11 = _10;
  _12 = _11 + 1;
  counters_RXPDU[0] = _12;
  goto <bb 11>; [INV]

  <bb 7> :
<L4>:
  _13 = counters_RXPDU[1];
  _14 = _13;
  _15 = _14 + 1;
  counters_RXPDU[1] = _15;
  goto <bb 11>; [INV]

  <bb 8> :
<L5>:
  _16 = counters_RXPDU[2];
  _17 = _16;
  _18 = _17 + 1;
  counters_RXPDU[2] = _18;
  goto <bb 11>; [INV]

  <bb 9> :
<L6>:
  _19 = counters_RXPDU[3];
  _20 = _19;
  _21 = _20 + 1;
  counters_RXPDU[3] = _21;
  goto <bb 11>; [INV]

  <bb 10> :
<L7>:

  <bb 11> :
  CanIf_Can0_bRxFlag = 1;
  Data = {CLOBBER};
  return;

}


CDD_UserTxConfirmation_Can_0 (PduIdType TxPduId, Std_ReturnType result)
{
  static uint8 Transmit_count = 0;

  <bb 2> :
  if (result == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  Transmit_count.0_1 = Transmit_count;
  Transmit_count.1_2 = Transmit_count.0_1;
  _3 = Transmit_count.1_2 + 1;
  Transmit_count = _3;
  Transmit_count.2_4 = Transmit_count;
  if (Transmit_count.2_4 == 4)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  Transmit_count = 0;
  CanIf_Can0_bTxFlag = 1;

  <bb 5> :
  return;

}


