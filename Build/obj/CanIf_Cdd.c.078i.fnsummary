Symbol table:

CanIf_Can2_bRxFlag/4 (CanIf_Can2_bRxFlag) @0692be10
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CDD_UserRxIndication_Can_2/1 (write) 
  Availability: not_available
  Varpool flags:
CanIf_Can2_bTxFlag/3 (CanIf_Can2_bTxFlag) @0692bcf0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: CDD_UserTxConfirmation_Can_2/0 (write) 
  Availability: not_available
  Varpool flags:
Transmit_count.0/2 (Transmit_count) @0692bca8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: CDD_UserTxConfirmation_Can_2/0 (read) CDD_UserTxConfirmation_Can_2/0 (write) CDD_UserTxConfirmation_Can_2/0 (read) CDD_UserTxConfirmation_Can_2/0 (write) 
  Availability: available
  Varpool flags: initialized
CDD_UserRxIndication_Can_2/1 (CDD_UserRxIndication_Can_2) @0692de00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: CanIf_Can2_bRxFlag/4 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
CDD_UserTxConfirmation_Can_2/0 (CDD_UserTxConfirmation_Can_2) @0692da80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Transmit_count.0/2 (read) Transmit_count.0/2 (write) Transmit_count.0/2 (read) CanIf_Can2_bTxFlag/3 (write) Transmit_count.0/2 (write) 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
CDD_UserRxIndication_Can_2 (PduIdType RxPduId, const struct PduInfoType * PduInfoPtr)
{
  <bb 2> :
  CanIf_Can2_bRxFlag = 1;
  return;

}


CDD_UserTxConfirmation_Can_2 (PduIdType TxPduId, Std_ReturnType result)
{
  static uint8 Transmit_count = 0;
  unsigned char Transmit_count.0_1;
  unsigned char Transmit_count.1_2;
  unsigned char _3;
  unsigned char Transmit_count.2_4;

  <bb 2> :
  if (result_7(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  Transmit_count.0_1 = Transmit_count;
  Transmit_count.1_2 = Transmit_count.0_1;
  _3 = Transmit_count.1_2 + 1;
  Transmit_count = _3;

  <bb 4> :
  Transmit_count.2_4 = Transmit_count;
  if (Transmit_count.2_4 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  CanIf_Can2_bTxFlag = 1;
  Transmit_count = 0;

  <bb 6> :
  return;

}


